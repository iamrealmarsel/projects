@mixin clearfix {
  &::after  {
  content: '';
  display: block;
  clear: both;
  }
}

@mixin vAlign {
  &::after {
    content: '';
    display: inline-block;
    vertical-align: middle;
    height: 100%;
    width: 0;
    // font-size: 0; // нужен этот параметр?

    // outline: solid 1px red;
  }
}


@mixin panelSmall($boxShadow: 0 3px 3px rgba(0,0,0,0.15)) {
  border-radius: 5px; 
  background-color: #fff;
  box-shadow: $boxShadow;
}

@mixin panelBig {
  border-radius: 5px; 
  background-color: #fff;
  box-shadow: 0 7px 7px rgba(0,0,0,0.15);
}

@mixin justify {
  &::after {
    content: '';
    display: inline-block;
    width: 100%;
    height: 0;
    font-size: 0;
  }
}

@mixin placeholder($color) {
  &::-moz-placeholder { color: $color; }
  &:-ms-input-placeholder { color: $color; }
  &::-ms-input-placeholder { color: $color; }
  &::placeholder { color: $color; } 
  &::-webkit-input-placeholder { color: $color; }
}

// Font-awesome

@mixin fa-icon($faIcon, $fontSize:inherit, $color:inherit) {
  display: inline-block;
  font: normal normal normal #{$fa-font-size-base}/#{$fa-line-height-base} FontAwesome; // shortening font declaration
  content: $faIcon;
  font-size: $fontSize; // can't have font-size inherit on line above, so need to override
  color: $color;
  text-rendering: auto; // optimizelegibility throws things off #1094
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin fa-icon-rotate($degrees, $rotation) {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation})";
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees);
          transform: rotate($degrees);
}

@mixin fa-icon-flip($horiz, $vert, $rotation) {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation}, mirror=1)";
  -webkit-transform: scale($horiz, $vert);
      -ms-transform: scale($horiz, $vert);
          transform: scale($horiz, $vert);
}

// Only display content to screen readers. A la Bootstrap 4.
//
// See: http://a11yproject.com/posts/how-to-hide-content/

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}

